{"version":3,"file":"index.js","mappings":"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","sources":["webpack://twitch-pre-publish-checklist/./src/admin/components/category.js","webpack://twitch-pre-publish-checklist/./src/admin/components/featured-image.js","webpack://twitch-pre-publish-checklist/./src/admin/components/settings-screen.js","webpack://twitch-pre-publish-checklist/./src/admin/components/settings-section.js","webpack://twitch-pre-publish-checklist/./src/admin/components/wordcount.js","webpack://twitch-pre-publish-checklist/./src/admin/datastore/constants.js","webpack://twitch-pre-publish-checklist/./src/admin/datastore/index.js","webpack://twitch-pre-publish-checklist/external window [\"wp\",\"apiFetch\"]","webpack://twitch-pre-publish-checklist/external window [\"wp\",\"components\"]","webpack://twitch-pre-publish-checklist/external window [\"wp\",\"coreData\"]","webpack://twitch-pre-publish-checklist/external window [\"wp\",\"data\"]","webpack://twitch-pre-publish-checklist/external window [\"wp\",\"element\"]","webpack://twitch-pre-publish-checklist/external window [\"wp\",\"i18n\"]","webpack://twitch-pre-publish-checklist/webpack/bootstrap","webpack://twitch-pre-publish-checklist/webpack/runtime/compat get default export","webpack://twitch-pre-publish-checklist/webpack/runtime/define property getters","webpack://twitch-pre-publish-checklist/webpack/runtime/hasOwnProperty shorthand","webpack://twitch-pre-publish-checklist/webpack/runtime/make namespace object","webpack://twitch-pre-publish-checklist/./src/admin/index.js"],"sourcesContent":["/**\n *  WordPress dependencies\n */\nimport { ToggleControl } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { STORE_NAME } from '../datastore/constants';\nimport SettingsSection from './settings-section';\n\nconst Category = () => {\n\t// Get the count from the state.\n\tconst requiredCategory = useSelect((select) =>\n\t\tselect(STORE_NAME).getCategoryIsRequired()\n\t);\n\tconst userPreferences = useSelect((select) =>\n\t\tselect(STORE_NAME).getUserPreferences()\n\t);\n\n\t// Update the state.\n\tconst { setCategoryRequired, setUserPreferences } = useDispatch(STORE_NAME);\n\n\tconst { showCategory } = userPreferences || {\n\t\tshowCategory: false,\n\t};\n\treturn (\n\t\t<SettingsSection\n\t\t\ttitle=\"Category Options\"\n\t\t\tinitialOpen={showCategory}\n\t\t\tonToggle={() => {\n\t\t\t\tsetUserPreferences({\n\t\t\t\t\t...userPreferences,\n\t\t\t\t\tshowCategory: !showCategory,\n\t\t\t\t});\n\t\t\t}}\n\t\t>\n\t\t\t<ToggleControl\n\t\t\t\tlabel={__('Require Category', 'pre-publish-checklist')}\n\t\t\t\tchecked={requiredCategory}\n\t\t\t\tonChange={() => {\n\t\t\t\t\tsetCategoryRequired(!requiredCategory);\n\t\t\t\t}}\n\t\t\t/>\n\t\t</SettingsSection>\n\t);\n};\nexport default Category;\n","/**\n *  WordPress dependencies\n */\nimport { ToggleControl } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\nimport { STORE_NAME } from '../datastore/constants';\nimport SettingsSection from './settings-section';\n\nconst FeaturedImage = () => {\n\t// Get the count from the state.\n\tconst imageRequired = useSelect((select) =>\n\t\tselect(STORE_NAME).getFeatureImageIsRequired()\n\t);\n\tconst userPreferences = useSelect((select) =>\n\t\tselect(STORE_NAME).getUserPreferences()\n\t);\n\n\t// Update the state.\n\tconst { setFeaturedImageIsRequired, setUserPreferences } =\n\t\tuseDispatch(STORE_NAME);\n\n\tconst { showFeaturedImage } = userPreferences || {\n\t\tshowFeaturedImage: false,\n\t};\n\treturn (\n\t\t<SettingsSection\n\t\t\ttitle=\"Featured Image Options\"\n\t\t\tinitialOpen={showFeaturedImage}\n\t\t\tonToggle={() => {\n\t\t\t\tsetUserPreferences({\n\t\t\t\t\t...userPreferences,\n\t\t\t\t\tshowFeaturedImage: !showFeaturedImage,\n\t\t\t\t});\n\t\t\t}}\n\t\t>\n\t\t\t<ToggleControl\n\t\t\t\tlabel={__('Require Featured Image', 'pre-publish-checklist')}\n\t\t\t\tchecked={imageRequired}\n\t\t\t\tonChange={() => {\n\t\t\t\t\tsetFeaturedImageIsRequired(!imageRequired);\n\t\t\t\t}}\n\t\t\t/>\n\t\t</SettingsSection>\n\t);\n};\nexport default FeaturedImage;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Button, Panel, PanelBody, PanelRow } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useEntityProp } from '@wordpress/core-data'; // do I need this?\n/**\n * Internal dependencies\n */\nimport '../datastore/index';\nimport WordCount from './wordcount';\nimport FeaturedImage from './featured-image';\nimport Category from './category';\nimport { STORE_NAME } from '../datastore/constants';\n\nconst SettingsScreen = () => {\n\tconst { saveEntityRecord } = useDispatch('core');\n\n\t// Gets all settings from the store.\n\tconst settingsFromState = useSelect((select) =>\n\t\tselect(STORE_NAME).getSettings()\n\t);\n\n\t// This is bad, we need a better loading process.\n\tif (!settingsFromState) {\n\t\treturn 'LOADING';\n\t}\n\n\treturn (\n\t\t<div className=\"wrap\">\n\t\t\t<Panel header=\"Twitch Pre-Publish Checklist Settings\">\n\t\t\t\t<WordCount />\n\t\t\t\t<FeaturedImage />\n\t\t\t\t<Category />\n\t\t\t\t<PanelBody>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t// This actually saves to the database\n\t\t\t\t\t\t\t\tsaveEntityRecord('root', 'site', {\n\t\t\t\t\t\t\t\t\t'pre-publish-checklist_data':\n\t\t\t\t\t\t\t\t\t\tsettingsFromState,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{__('SAVE', 'pre-publish-checklist')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t</PanelBody>\n\t\t\t</Panel>\n\t\t</div>\n\t);\n};\n\nexport default SettingsScreen;\n","/**\n *  WordPress dependencies\n */\nimport { PanelBody, PanelRow } from '@wordpress/components';\nconst SettingsSection = ({ children, ...props }) => {\n\treturn (\n\t\t<PanelBody {...props}>\n\t\t\t<PanelRow>{children}</PanelRow>\n\t\t</PanelBody>\n\t);\n};\nexport default SettingsSection;\n","/**\n * WordPress dependencies\n */\nimport { TextControl } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\nimport { STORE_NAME } from '../datastore/constants';\nimport SettingsSection from './settings-section';\n\nconst WordCount = () => {\n\t// Get the count from the state.\n\tconst wordcount = useSelect((select) => select(STORE_NAME).getWordCount());\n\tconst userPreferences = useSelect((select) =>\n\t\tselect(STORE_NAME).getUserPreferences()\n\t);\n\n\t// Update the state.\n\tconst { setWordCount, setToggleState, setSetting } =\n\t\tuseDispatch(STORE_NAME);\n\tconst { showWordCount } = userPreferences || {\n\t\tshowWordCount: false,\n\t};\n\n\treturn (\n\t\t<SettingsSection\n\t\t\ttitle=\"Word Count Options\"\n\t\t\tinitialOpen={showWordCount}\n\t\t\tonToggle={() => {\n\t\t\t\tsetToggleState('showWordCount', !showWordCount);\n\t\t\t}}\n\t\t>\n\t\t\t<TextControl\n\t\t\t\tlabel={__('Minimum Word Count', 'pre-publish-checklist')}\n\t\t\t\tvalue={wordcount}\n\t\t\t\t// onChange={(value) => setWordCount(value)}\n\t\t\t\tonChange={(value) => setSetting('wordcount', value)}\n\t\t\t/>\n\t\t</SettingsSection>\n\t);\n};\nexport default WordCount;\n","// Constants\nexport const STORE_NAME = 'pre-publish-checklist';\nexport const DEFAULT_STATE = {};\nexport const SET_WORDCOUNT = 'SET_WORDCOUNT';\nexport const SET_FEATURED_IMAGE = 'SET_FEATURED_IMAGE';\nexport const SET_CATEGORY = 'SET_CATEGORY';\nexport const STATE_FROM_DATABASE = 'STATE_FROM_DATABASE';\nexport const FETCH_SETTINGS = 'FETCH_SETTINGS';\nexport const SET_USER_PREFERENCES = 'SET_USER_PREFERENCES';\nexport const SET_SETTING = 'SET_SETTING';\n","/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport { createReduxStore, register } from '@wordpress/data';\n\nimport {\n\tDEFAULT_STATE,\n\tSTATE_FROM_DATABASE,\n\tSET_WORDCOUNT,\n\tFETCH_SETTINGS,\n\tSET_FEATURED_IMAGE,\n\tSET_CATEGORY,\n\tSET_SETTING,\n\tSET_USER_PREFERENCES,\n\tSTORE_NAME,\n} from './constants';\n\n// Define our actions\nconst actions = {\n\tinitSettings(settings) {\n\t\treturn {\n\t\t\ttype: STATE_FROM_DATABASE,\n\t\t\tpayload: {\n\t\t\t\t...settings,\n\t\t\t},\n\t\t};\n\t},\n\tfetchSettings() {\n\t\treturn {\n\t\t\ttype: FETCH_SETTINGS,\n\t\t\tpayload: {},\n\t\t};\n\t},\n\n\tsetWordCount(wordcount) {\n\t\treturn {\n\t\t\ttype: SET_WORDCOUNT,\n\t\t\tpayload: {\n\t\t\t\twordcount,\n\t\t\t},\n\t\t};\n\t},\n\tsetFeaturedImageIsRequired(requiredFeaturedImage) {\n\t\treturn {\n\t\t\ttype: SET_FEATURED_IMAGE,\n\t\t\tpayload: {\n\t\t\t\trequiredFeaturedImage,\n\t\t\t},\n\t\t};\n\t},\n\tsetCategoryRequired(requiredCategory) {\n\t\treturn {\n\t\t\ttype: SET_CATEGORY,\n\t\t\tpayload: { requiredCategory },\n\t\t};\n\t},\n\tsetUserPreferences(userPreferences) {\n\t\treturn {\n\t\t\ttype: SET_USER_PREFERENCES,\n\t\t\tpayload: {\n\t\t\t\tuserPreferences,\n\t\t\t},\n\t\t};\n\t},\n\tsetSetting(setting, value) {\n\t\treturn {\n\t\t\ttype: SET_SETTING,\n\t\t\tpayload: {\n\t\t\t\tsetting,\n\t\t\t\tvalue,\n\t\t\t},\n\t\t};\n\t},\n\tsetToggleState(section) {\n\t\treturn function ({ select, dispatch }) {\n\t\t\tconst currentValues = select.getUserPreferences();\n\t\t\tconst sectionValue = currentValues[section];\n\t\t\tdispatch.setUserPreferences({\n\t\t\t\t...currentValues,\n\t\t\t\t[section]: !sectionValue,\n\t\t\t});\n\t\t};\n\t},\n};\n\n// Define the reducer\nfunction reducer(state = DEFAULT_STATE, { type, payload }) {\n\tswitch (type) {\n\t\tcase STATE_FROM_DATABASE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...payload,\n\t\t\t};\n\t\tcase SET_SETTING:\n\t\t\tconst { setting, value } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t[setting]: value,\n\t\t\t};\n\t\tcase SET_WORDCOUNT:\n\t\t\tconst { wordcount } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\twordcount,\n\t\t\t};\n\t\tcase SET_FEATURED_IMAGE:\n\t\t\tconst { requiredFeaturedImage } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trequiredFeaturedImage,\n\t\t\t};\n\t\tcase SET_CATEGORY:\n\t\t\tconst { requiredCategory } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trequiredCategory,\n\t\t\t};\n\t\tcase SET_USER_PREFERENCES:\n\t\t\tconst { userPreferences } = payload;\n\t\t\tif (userPreferences) {\n\t\t\t\twindow.localStorage.setItem(\n\t\t\t\t\t'pre-publish-checklist-user-preferences',\n\t\t\t\t\tJSON.stringify(userPreferences)\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserPreferences,\n\t\t\t};\n\t}\n\treturn state;\n}\n\n// Define some selectors\nconst selectors = {\n\tgetWordCount(state) {\n\t\treturn state.wordcount;\n\t},\n\tgetFeatureImageIsRequired(state) {\n\t\treturn state.requiredFeaturedImage;\n\t},\n\tgetCategoryIsRequired(state) {\n\t\treturn state.requiredCategory;\n\t},\n\tgetSettings(state) {\n\t\tconst { userPreferences, ...settings } = state;\n\t\treturn settings;\n\t},\n\tgetUserPreferences(state) {\n\t\treturn state.userPreferences;\n\t},\n};\n\nconst resolvers = {\n\tgetSettings() {\n\t\treturn async ({ dispatch }) => {\n\t\t\tconst settings = await apiFetch({ path: '/wp/v2/settings' });\n\t\t\tdispatch.initSettings(settings['pre-publish-checklist_data']);\n\t\t};\n\t},\n\tgetUserPreferences() {\n\t\treturn ({ dispatch }) => {\n\t\t\tconst userPreferences =\n\t\t\t\twindow.localStorage.getItem(\n\t\t\t\t\t'pre-publish-checklist-user-preferences'\n\t\t\t\t) || DEFAULT_STATE.userPreferences;\n\t\t\tdispatch.setUserPreferences(JSON.parse(userPreferences));\n\t\t};\n\t},\n};\n\n// Define and register the store.\nconst store = createReduxStore(STORE_NAME, {\n\treducer,\n\tactions,\n\tselectors,\n\tresolvers,\n\t// __experimentalUseThunks: true,\n});\n\nregister(store);\n","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * WordPress dependencies\n */\nimport { render } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport SettingsScreen from './components/settings-screen';\n\n// Render the app to the screen.\nrender(\n\t<SettingsScreen />,\n\tdocument.getElementById('twitch-pre-publish-checklist')\n);\n"],"names":["ToggleControl","__","useDispatch","useSelect","STORE_NAME","SettingsSection","Category","requiredCategory","select","getCategoryIsRequired","userPreferences","getUserPreferences","setCategoryRequired","setUserPreferences","showCategory","FeaturedImage","imageRequired","getFeatureImageIsRequired","setFeaturedImageIsRequired","showFeaturedImage","Button","Panel","PanelBody","PanelRow","useEntityProp","WordCount","SettingsScreen","saveEntityRecord","settingsFromState","getSettings","children","props","TextControl","wordcount","getWordCount","setWordCount","setToggleState","setSetting","showWordCount","value","DEFAULT_STATE","SET_WORDCOUNT","SET_FEATURED_IMAGE","SET_CATEGORY","STATE_FROM_DATABASE","FETCH_SETTINGS","SET_USER_PREFERENCES","SET_SETTING","apiFetch","createReduxStore","register","actions","initSettings","settings","type","payload","fetchSettings","requiredFeaturedImage","setting","section","dispatch","currentValues","sectionValue","reducer","state","window","localStorage","setItem","JSON","stringify","selectors","resolvers","path","getItem","parse","store","render","document","getElementById"],"sourceRoot":""}