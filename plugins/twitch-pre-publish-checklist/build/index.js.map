{"version":3,"file":"index.js","mappings":"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","sources":["webpack://twitch-pre-publish-checklist/./src/category.js","webpack://twitch-pre-publish-checklist/./src/datastore.js","webpack://twitch-pre-publish-checklist/./src/featured-image.js","webpack://twitch-pre-publish-checklist/./src/settings-screen.js","webpack://twitch-pre-publish-checklist/./src/settings-section.js","webpack://twitch-pre-publish-checklist/./src/wordcount.js","webpack://twitch-pre-publish-checklist/external window [\"wp\",\"components\"]","webpack://twitch-pre-publish-checklist/external window [\"wp\",\"coreData\"]","webpack://twitch-pre-publish-checklist/external window [\"wp\",\"data\"]","webpack://twitch-pre-publish-checklist/external window [\"wp\",\"element\"]","webpack://twitch-pre-publish-checklist/external window [\"wp\",\"i18n\"]","webpack://twitch-pre-publish-checklist/webpack/bootstrap","webpack://twitch-pre-publish-checklist/webpack/runtime/compat get default export","webpack://twitch-pre-publish-checklist/webpack/runtime/define property getters","webpack://twitch-pre-publish-checklist/webpack/runtime/hasOwnProperty shorthand","webpack://twitch-pre-publish-checklist/webpack/runtime/make namespace object","webpack://twitch-pre-publish-checklist/./src/index.js"],"sourcesContent":["/**\n *  WordPress dependencies\n */\nimport { ToggleControl } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { STORE_NAME } from './datastore';\nimport SettingsSection from './settings-section';\n\nconst Category = () => {\n\t// Get the count from the state.\n\tconst requiredCategory = useSelect((select) =>\n\t\tselect(STORE_NAME).getCategoryIsRequired()\n\t);\n\tconst userPreferences = useSelect((select) =>\n\t\tselect(STORE_NAME).getUserPreferences()\n\t);\n\n\t// Update the state.\n\tconst { setCategoryRequired, setUserPreferences } = useDispatch(STORE_NAME);\n\n\tconst { showCategory } = userPreferences || {\n\t\tshowCategory: false,\n\t};\n\treturn (\n\t\t<SettingsSection\n\t\t\ttitle=\"Category Options\"\n\t\t\tinitialOpen={showCategory}\n\t\t\tonToggle={() => {\n\t\t\t\tsetUserPreferences({\n\t\t\t\t\t...userPreferences,\n\t\t\t\t\tshowCategory: !showCategory,\n\t\t\t\t});\n\t\t\t}}\n\t\t>\n\t\t\t<ToggleControl\n\t\t\t\tlabel={__('Require Category', 'pre-publish-checklist')}\n\t\t\t\tchecked={requiredCategory}\n\t\t\t\tonChange={() => {\n\t\t\t\t\tsetCategoryRequired(!requiredCategory);\n\t\t\t\t}}\n\t\t\t/>\n\t\t</SettingsSection>\n\t);\n};\nexport default Category;\n","/**\n * WordPress dependencies\n */\n\nimport { createReduxStore, register } from '@wordpress/data';\n\nexport const STORE_NAME = 'pre-publish-checklist';\n\n// Default state\nexport const DEFAULT_STATE = {\n\twordcount: 250,\n\trequiredFeaturedImage: true,\n\trequiredCategory: true,\n\tuserPreferences: {\n\t\tshowWordCount: false,\n\t\tshowFeaturedImage: true,\n\t},\n};\n\n// Constants\nconst SET_WORDCOUNT = 'SET_WORDCOUNT';\nconst SET_FEATURE_IMAGE = 'SET_FEATURE_IMAGE';\nconst SET_CATEGORY = 'SET_CATEGORY';\nconst STATE_FROM_DATABASE = 'STATE_FROM_DATABASE';\nconst FETCH_SETTINGS = 'FETCH_SETTINGS';\nconst SET_USER_PREFERENCES = 'SET_USER_PREFERENCES';\n\n// Define our actions\nconst actions = {\n\tinitSettings(settings) {\n\t\treturn {\n\t\t\ttype: STATE_FROM_DATABASE,\n\t\t\tpayload: {\n\t\t\t\t...settings,\n\t\t\t},\n\t\t};\n\t},\n\tfetchSettings() {\n\t\treturn {\n\t\t\ttype: FETCH_SETTINGS,\n\t\t\tpayload: {},\n\t\t};\n\t},\n\tsetWordCount(wordcount) {\n\t\treturn {\n\t\t\ttype: SET_WORDCOUNT,\n\t\t\tpayload: {\n\t\t\t\twordcount,\n\t\t\t},\n\t\t};\n\t},\n\tsetFeaturedImageIsRequired(requiredFeaturedImage) {\n\t\treturn {\n\t\t\ttype: SET_FEATURE_IMAGE,\n\t\t\tpayload: {\n\t\t\t\trequiredFeaturedImage,\n\t\t\t},\n\t\t};\n\t},\n\tsetCategoryRequired(requiredCategory) {\n\t\treturn {\n\t\t\ttype: SET_CATEGORY,\n\t\t\tpayload: { requiredCategory },\n\t\t};\n\t},\n\tsetUserPreferences(userPreferences) {\n\t\treturn {\n\t\t\ttype: SET_USER_PREFERENCES,\n\t\t\tpayload: {\n\t\t\t\tuserPreferences,\n\t\t\t},\n\t\t};\n\t},\n};\n\n// Define the reducer\nfunction reducer(state = DEFAULT_STATE, { type, payload }) {\n\tswitch (type) {\n\t\tcase STATE_FROM_DATABASE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...payload,\n\t\t\t};\n\t\tcase SET_WORDCOUNT:\n\t\t\tconst { wordcount } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\twordcount,\n\t\t\t};\n\t\tcase SET_FEATURE_IMAGE:\n\t\t\tconst { requiredFeaturedImage } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trequiredFeaturedImage,\n\t\t\t};\n\t\tcase SET_CATEGORY:\n\t\t\tconst { requiredCategory } = payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trequiredCategory,\n\t\t\t};\n\t\tcase SET_USER_PREFERENCES:\n\t\t\tconst { userPreferences } = payload;\n\t\t\tif (userPreferences) {\n\t\t\t\twindow.localStorage.setItem(\n\t\t\t\t\t'pre-publish-checklist-user-preferences',\n\t\t\t\t\tJSON.stringify(userPreferences)\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserPreferences,\n\t\t\t};\n\t}\n\treturn state;\n}\n\n// Define some selectors\nconst selectors = {\n\tgetWordCount(state) {\n\t\treturn state.wordcount;\n\t},\n\tgetFeatureImageIsRequired(state) {\n\t\treturn state.requiredFeaturedImage;\n\t},\n\tgetCategoryIsRequired(state) {\n\t\treturn state.requiredCategory;\n\t},\n\tgetSettings(state) {\n\t\treturn state;\n\t},\n\tgetUserPreferences(state) {\n\t\treturn state.userPreferences;\n\t},\n};\n\nconst resolvers = {\n\t*getUserPreferences() {\n\t\tconst userPreferences =\n\t\t\twindow.localStorage.getItem(\n\t\t\t\t'pre-publish-checklist-user-preferences'\n\t\t\t) || DEFAULT_STATE.userPreferences;\n\t\treturn actions.setUserPreferences(JSON.parse(userPreferences));\n\t},\n};\n\n// Define and register the store.\nconst store = createReduxStore(STORE_NAME, {\n\treducer,\n\tactions,\n\tselectors,\n\tresolvers,\n});\n\nregister(store);\n","/**\n *  WordPress dependencies\n */\nimport { ToggleControl } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\nimport { STORE_NAME } from './datastore';\nimport SettingsSection from './settings-section';\n\nconst FeaturedImage = () => {\n\t// Get the count from the state.\n\tconst imageRequired = useSelect((select) =>\n\t\tselect(STORE_NAME).getFeatureImageIsRequired()\n\t);\n\tconst userPreferences = useSelect((select) =>\n\t\tselect(STORE_NAME).getUserPreferences()\n\t);\n\n\t// Update the state.\n\tconst { setFeaturedImageIsRequired, setUserPreferences } =\n\t\tuseDispatch(STORE_NAME);\n\n\tconst { showFeaturedImage } = userPreferences || {\n\t\tshowFeaturedImage: false,\n\t};\n\treturn (\n\t\t<SettingsSection\n\t\t\ttitle=\"Featured Image Options\"\n\t\t\tinitialOpen={showFeaturedImage}\n\t\t\tonToggle={() => {\n\t\t\t\tsetUserPreferences({\n\t\t\t\t\t...userPreferences,\n\t\t\t\t\tshowFeaturedImage: !showFeaturedImage,\n\t\t\t\t});\n\t\t\t}}\n\t\t>\n\t\t\t<ToggleControl\n\t\t\t\tlabel={__('Require Featured Image', 'pre-publish-checklist')}\n\t\t\t\tchecked={imageRequired}\n\t\t\t\tonChange={() => {\n\t\t\t\t\tsetFeaturedImageIsRequired(!imageRequired);\n\t\t\t\t}}\n\t\t\t/>\n\t\t</SettingsSection>\n\t);\n};\nexport default FeaturedImage;\n","/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Button, Panel, PanelBody, PanelRow } from '@wordpress/components';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useEffect } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport './datastore';\nimport WordCount from './wordcount';\nimport FeaturedImage from './featured-image';\nimport Category from './category';\nimport { STORE_NAME } from './datastore';\n\nconst SettingsScreen = () => {\n\t// Retrieve the settings object.\n\tconst [settings, setSettings] = useEntityProp(\n\t\t'root',\n\t\t'site',\n\t\t'pre-publish-checklist_data'\n\t);\n\t// Dispatch actions.\n\tconst { initSettings } = useDispatch(STORE_NAME);\n\tconst { saveEditedEntityRecord } = useDispatch('core');\n\n\t// Gets all settings from the store.\n\tconst settingsFromState = useSelect((select) =>\n\t\tselect(STORE_NAME).getSettings()\n\t);\n\n\t// Hydrate the state from the database once. IS this wrong?\n\tuseEffect(() => {\n\t\tif (settings) {\n\t\t\tinitSettings(settings);\n\t\t}\n\t}, [settings]);\n\n\t// This is bad, we need a better loading process.\n\tif (!settings) {\n\t\treturn 'LOADING';\n\t}\n\n\treturn (\n\t\t<div className=\"wrap\">\n\t\t\t<Panel header=\"Twitch Pre-Publish Checklist Settings\">\n\t\t\t\t<WordCount />\n\t\t\t\t<FeaturedImage />\n\t\t\t\t<Category />\n\t\t\t\t<PanelBody>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t// This tells GB that option has been changed.\n\t\t\t\t\t\t\t\tsetSettings(settingsFromState);\n\t\t\t\t\t\t\t\t// This actually saves to the database\n\t\t\t\t\t\t\t\tsaveEditedEntityRecord('root', 'site');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{__('SAVE', 'pre-publish-checklist')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t</PanelBody>\n\t\t\t</Panel>\n\t\t</div>\n\t);\n};\n\nexport default SettingsScreen;\n","/**\n *  WordPress dependencies\n */\nimport { PanelBody, PanelRow } from '@wordpress/components';\nconst SettingsSection = ({ children, ...props }) => {\n\treturn (\n\t\t<PanelBody {...props}>\n\t\t\t<PanelRow>{children}</PanelRow>\n\t\t</PanelBody>\n\t);\n};\nexport default SettingsSection;\n","/**\n * WordPress dependencies\n */\nimport { TextControl } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\nimport { STORE_NAME } from './datastore';\nimport SettingsSection from './settings-section';\n\nconst WordCount = () => {\n\t// Get the count from the state.\n\tconst wordcount = useSelect((select) => select(STORE_NAME).getWordCount());\n\tconst userPreferences = useSelect((select) =>\n\t\tselect(STORE_NAME).getUserPreferences()\n\t);\n\n\t// Update the state.\n\tconst { setWordCount, setUserPreferences } = useDispatch(STORE_NAME);\n\n\tconst { showWordCount } = userPreferences || { showWordCount: false };\n\treturn (\n\t\t<SettingsSection\n\t\t\ttitle=\"Word Count Options\"\n\t\t\tinitialOpen={showWordCount}\n\t\t\tonToggle={() => {\n\t\t\t\tsetUserPreferences({\n\t\t\t\t\t...userPreferences,\n\t\t\t\t\tshowWordCount: !showWordCount,\n\t\t\t\t});\n\t\t\t}}\n\t\t>\n\t\t\t<TextControl\n\t\t\t\tlabel={__('Minimum Word Count', 'pre-publish-checklist')}\n\t\t\t\tvalue={wordcount}\n\t\t\t\tonChange={(value) => setWordCount(value)}\n\t\t\t/>\n\t\t</SettingsSection>\n\t);\n};\nexport default WordCount;\n","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * WordPress dependencies\n */\nimport { render } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport SettingsScreen from './settings-screen';\n\n// Render the app to the screen.\nrender(\n\t<SettingsScreen />,\n\tdocument.getElementById('twitch-pre-publish-checklist')\n);\n"],"names":["ToggleControl","__","useDispatch","useSelect","STORE_NAME","SettingsSection","Category","requiredCategory","select","getCategoryIsRequired","userPreferences","getUserPreferences","setCategoryRequired","setUserPreferences","showCategory","createReduxStore","register","DEFAULT_STATE","wordcount","requiredFeaturedImage","showWordCount","showFeaturedImage","SET_WORDCOUNT","SET_FEATURE_IMAGE","SET_CATEGORY","STATE_FROM_DATABASE","FETCH_SETTINGS","SET_USER_PREFERENCES","actions","initSettings","settings","type","payload","fetchSettings","setWordCount","setFeaturedImageIsRequired","reducer","state","window","localStorage","setItem","JSON","stringify","selectors","getWordCount","getFeatureImageIsRequired","getSettings","resolvers","getItem","parse","store","FeaturedImage","imageRequired","Button","Panel","PanelBody","PanelRow","useEntityProp","useEffect","WordCount","SettingsScreen","setSettings","saveEditedEntityRecord","settingsFromState","children","props","TextControl","value","render","document","getElementById"],"sourceRoot":""}