{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA,MAAMK,cAAc,GAAG,MAAM;AAC5B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,mEAAa,CAClD,MADkD,EAElD,MAFkD,EAGlD,4BAHkD,CAAnD;AAKA,QAAM;AAAEK,IAAAA;AAAF,MAA6BJ,4DAAW,CAAC,MAAD,CAA9C;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BV,4DAAQ,CAAC,WAAD,CAA1C;;AAEA,QAAMW,QAAQ,GAAIC,OAAD,IAAa;AAC7BF,IAAAA,YAAY,CAACE,OAAD,CAAZ;AACA,GAFD;;AAIA,SACC;AAAK,aAAS,EAAC;AAAf,KACC,sHADD,EAEC,kEAAC,2DAAD;AACC,aAAS,EAAC,cADX;AAEC,eAAW,EAAC,YAFb;AAGC,YAAQ,EAAED,QAHX;AAIC,QAAI,EAAE,CACL;AACCE,MAAAA,IAAI,EAAE,WADP;AAECC,MAAAA,KAAK,EAAE,YAFR;AAGCC,MAAAA,SAAS,EAAE;AAHZ,KADK,EAML;AACCF,MAAAA,IAAI,EAAE,MADP;AAECC,MAAAA,KAAK,EAAE,OAFR;AAGCC,MAAAA,SAAS,EAAE;AAHZ,KANK;AAJP,KAiBGC,GAAD,IAAS,6EAAIA,GAAG,CAACF,KAAR,CAjBX,CAFD,EAqBC,kEAAC,yDAAD;AACC,WAAO,EAAC,SADT;AAEC,WAAO,EAAE,MAAM;AACdT,MAAAA,cAAc,CAAC;AACdY,QAAAA,SAAS,EAAE,GADG;AAEdC,QAAAA,qBAAqB,EAAE;AAFT,OAAD,CAAd,CADc,CAKd;;AACAZ,MAAAA,sBAAsB,CAAC,MAAD,EAAS,MAAT,CAAtB;AACA;AATF,YArBD,CADD;AAqCA,CAnDD;;AAqDA,+DAAeH,cAAf;;;;;;;;;;AC1DA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AAEA;AACA;AACA;;CAGA;;AACAgB,0DAAM,CACL,kEAAC,wDAAD,OADK,EAELC,QAAQ,CAACC,cAAT,CAAwB,8BAAxB,CAFK,CAAN,C","sources":["webpack://twitch-pre-publish-checklist/./src/settings-screen.js","webpack://twitch-pre-publish-checklist/external window [\"wp\",\"components\"]","webpack://twitch-pre-publish-checklist/external window [\"wp\",\"coreData\"]","webpack://twitch-pre-publish-checklist/external window [\"wp\",\"data\"]","webpack://twitch-pre-publish-checklist/external window [\"wp\",\"element\"]","webpack://twitch-pre-publish-checklist/webpack/bootstrap","webpack://twitch-pre-publish-checklist/webpack/runtime/compat get default export","webpack://twitch-pre-publish-checklist/webpack/runtime/define property getters","webpack://twitch-pre-publish-checklist/webpack/runtime/hasOwnProperty shorthand","webpack://twitch-pre-publish-checklist/webpack/runtime/make namespace object","webpack://twitch-pre-publish-checklist/./src/index.js"],"sourcesContent":["import { TabPanel, Button } from '@wordpress/components';\nimport { useState } from '@wordpress/element';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { useDispatch } from '@wordpress/data';\n\nconst SettingsScreen = () => {\n\tconst [demoSetting, setDemoSetting] = useEntityProp(\n\t\t'root',\n\t\t'site',\n\t\t'pre-publish-checklist_data'\n\t);\n\tconst { saveEditedEntityRecord } = useDispatch('core');\n\tconsole.log(demoSetting);\n\tconst [activeTab, setActiveTab] = useState('wordcount');\n\n\tconst onSelect = (tabName) => {\n\t\tsetActiveTab(tabName);\n\t};\n\n\treturn (\n\t\t<div className=\"wrap\">\n\t\t\t<h1>Twitch Pre-Publish Checklist Settings</h1>\n\t\t\t<TabPanel\n\t\t\t\tclassName=\"my-tab-panel\"\n\t\t\t\tactiveClass=\"active-tab\"\n\t\t\t\tonSelect={onSelect}\n\t\t\t\ttabs={[\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'wordcount',\n\t\t\t\t\t\ttitle: 'Word Count',\n\t\t\t\t\t\tclassName: 'wordcount-tab',\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'tab2',\n\t\t\t\t\t\ttitle: 'Tab 2',\n\t\t\t\t\t\tclassName: 'tab-two',\n\t\t\t\t\t},\n\t\t\t\t]}\n\t\t\t>\n\t\t\t\t{(tab) => <p>{tab.title}</p>}\n\t\t\t</TabPanel>\n\t\t\t<Button\n\t\t\t\tvariant=\"primary\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetDemoSetting({\n\t\t\t\t\t\twordcount: 800,\n\t\t\t\t\t\trequiredFeaturedImage: true,\n\t\t\t\t\t});\n\t\t\t\t\t// This actually saves...\n\t\t\t\t\tsaveEditedEntityRecord('root', 'site');\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tSAVE\n\t\t\t</Button>\n\t\t</div>\n\t);\n};\n\nexport default SettingsScreen;\n","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * WordPress dependencies\n */\nimport { render } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport SettingsScreen from './settings-screen';\n\n// Render the app to the screen.\nrender(\n\t<SettingsScreen />,\n\tdocument.getElementById('twitch-pre-publish-checklist')\n);\n"],"names":["TabPanel","Button","useState","useEntityProp","useDispatch","SettingsScreen","demoSetting","setDemoSetting","saveEditedEntityRecord","console","log","activeTab","setActiveTab","onSelect","tabName","name","title","className","tab","wordcount","requiredFeaturedImage","render","document","getElementById"],"sourceRoot":""}